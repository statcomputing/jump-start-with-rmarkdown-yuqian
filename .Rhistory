## some utility functions, see the source code for details
source("utils_template.R")
## specify the packages needed
pkgs <- c("splines2", "DT", "webshot", "leaflet")
need.packages(pkgs)
## external data can be read in by regular functions,
## such as read.table or load
## get output format in case something needs extra effort
outFormat <- knitr::opts_knit$get("rmarkdown.pandoc.to")
## "latex" or "html"
## for latex and html output
isHtml <- identical(outFormat, "html")
isLatex <- identical(outFormat, "latex")
latex <- ifelse(isLatex, '\\LaTeX\\', 'LaTeX')
## specify global chunk options
knitr::opts_chunk$set(fig.width = 5, fig.height = 4, dpi = 300,
out.width = "90%", fig.align = "center")
knitr::kable(data.frame(
Environment = names(bookdown:::theorem_abbr),
`Printed Name` = unname(unlist(bookdown:::label_names_math)),
`Label Prefix` = unname(bookdown:::theorem_abbr),
stringsAsFactors = FALSE, check.names = FALSE
), caption = '(ref:theorem-envs)', booktabs = TRUE)
?integrate
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
Phi
View(Phi)
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
exp(x)
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
?norm
?dnorm
dnorm(1)
pnorm(0)
t
pnorm(t)
a<-norm(10)
a<-rnorm(10)
a
b<-sum(a<0)
b
b<-sum(a<=1)
b
?function()
?function()
1
Pred_Phi <- function(x,n){
a <- rnorm(n);
b <- sum(a<=x);
b
}
x = Pred_Phi(0,10)
x
Pred_Phi <- function(x,n){
a <- rnorm(n);
b <- sum(a<=x);
b/n
}
x = Pred_Phi(0,10)
x
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
n(1)
n(1,1)
n
n[1]
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
size(t)
?size
?for (variable in vector) {
}
?apply
a <- rnorm(n[1]);
Pred_1 = apply(t, 1, Pred_Phi(,a,n[1])
1
Pred_1 = apply(t, 2, Pred_Phi(,a,n[1])
2
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
x <- cbind(x1 = t, x2 = true_Phi, x3 = c(1:9))
x <- cbind(x1 = t, x2 = ture_Phi, x3 = c(1:9))
x
data.frame(x1 = t, x2 = ture_Phi, x3 = Pred_Phi_100(x1))
1
data.frame(x1 = t, x2 = ture_Phi, x3 = Pred_Phi_100(x[,1]))
x <- cbind(x1 = t, x2 = ture_Phi, x3 = c(1:9))
X <- cbind(x1 = t)
x
X
apply(X,1,Pred_Phi_100)
apply(X,1,Pred_Phi_100)
apply(X,1,Pred_Phi_100)
apply(X,1,Pred_Phi_100)
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
?replications
?rep()
rep(1:4, 2)
rep(1:4, each = 2)
a=c(1:4)
a
rep(a,2)
a[rep(1:nrow(a),2)]
a[rep(1:ncol(a),2)]
a[rep(1:nrow(a), 3), rep(1:ncol(a), 3)]
nrow(a)
ncol(a)
a
a = c(1,2,3)
a
ncol(a)
nrow(a)
a[rep(a,2),rep(a,2)]
[rep(a,2),rep(a,2)]
rep(a,2)
lapply(t,1,Pred_Phi_100)
lapply(t,Pred_Phi_100)
cc = lapply(t,Pred_Phi_100)
cc
cc = lapply(t,Pred_Phi_100)$value
cc
cc = sapply(t,Pred_Phi_100)
cc
T <- matrx(rep(t,each = 100), nrow = 100)
T <- matrix(rep(t,each = 100), nrow = 100)
View(`T`)
Pred_100_100 <- sapply(T,Pred_Phi_100)
view(`Pred_100_100`)
View(`Pred_100_100`)
Pred_100_100 <- apply(T,1,Pred_Phi_100)
warnings()
Pred_100_100 <- lapply(T,Pred_Phi_100)
View(Pred_100_100)
View(Pred_100_100)
Pred_100_100[90:110]
Pred_100_100 <- sapply(T,Pred_Phi_100)
Pred_100_100 <- array(1:900,c(100,9))
Pred_100_100 <- sapply(T,Pred_Phi_100)
Pred_100_100 <- array(Pred_100_100,c(100,9))
View(Pred_100_100)
View(Pred_100_100)
Ture_Phi <- matrix(rep(ture_Phi,each = 100), nrow = 100)
View(Ture_Phi)
View(Ture_Phi)
input <- mtcars[,c('mpg','cyl')]
View(input)
View(input)
print(head(input))
png(file = "boxplot.png")
boxplot(mpg ~ cyl, data = mtcars, xlab = "气缸数",
ylab = "每加仑里程", main = "里程数据")
dev.off()
View(input)
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
View(`T`)
View(`T`)
T <- rep(t,each = 100)
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
View(final_data)
View(final_data)
png(file = "boxplot.png")
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
boxplot(t ~ Pred_100, data = final_data, xlab = "t",
ylab = "Predictions", main = "Prediction with 100 runs")
dev.off()
boxplot(Pred_100 ~ t, data = final_data, xlab = "t",
ylab = "Predictions", main = "Prediction with 100 runs")
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
## some utility functions, see the source code for details
source("utils_template.R")
## specify the packages needed
pkgs <- c("splines2", "DT", "webshot", "leaflet")
need.packages(pkgs)
## external data can be read in by regular functions,
## such as read.table or load
## get output format in case something needs extra effort
outFormat <- knitr::opts_knit$get("rmarkdown.pandoc.to")
## "latex" or "html"
## for latex and html output
isHtml <- identical(outFormat, "html")
isLatex <- identical(outFormat, "latex")
latex <- ifelse(isLatex, '\\LaTeX\\', 'LaTeX')
## specify global chunk options
knitr::opts_chunk$set(fig.width = 5, fig.height = 4, dpi = 300,
out.width = "90%", fig.align = "center")
knitr::kable(data.frame(
Environment = names(bookdown:::theorem_abbr),
`Printed Name` = unname(unlist(bookdown:::label_names_math)),
`Label Prefix` = unname(bookdown:::theorem_abbr),
stringsAsFactors = FALSE, check.names = FALSE
), caption = '(ref:theorem-envs)', booktabs = TRUE)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::kable(head(iris), booktabs = TRUE,
caption = '(ref:iris)')
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
View(final_data)
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
View(final_data_1)
knitr::kable(final_data_1)
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
knitr::kable(final_data_1)
View(final_data_1)
View(final_data_1)
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
cars
summary(cars)
theorem-envs
## some utility functions, see the source code for details
source("utils_template.R")
source("main_Yuqian.R")
## specify the packages needed
pkgs <- c("splines2", "DT", "webshot", "leaflet")
need.packages(pkgs)
## external data can be read in by regular functions,
## such as read.table or load
## get output format in case something needs extra effort
outFormat <- knitr::opts_knit$get("rmarkdown.pandoc.to")
## "latex" or "html"
## for latex and html output
isHtml <- identical(outFormat, "html")
isLatex <- identical(outFormat, "latex")
latex <- ifelse(isLatex, '\\LaTeX\\', 'LaTeX')
## specify global chunk options
knitr::opts_chunk$set(fig.width = 5, fig.height = 4, dpi = 300,
out.width = "90%", fig.align = "center")
knitr::kable(final_data_1, caption = 'Ture Values and Prediction Values', booktabs = TRUE)
## some utility functions, see the source code for details
source("utils_template.R")
## specify the packages needed
pkgs <- c("splines2", "DT", "webshot", "leaflet")
need.packages(pkgs)
## external data can be read in by regular functions,
## such as read.table or load
## get output format in case something needs extra effort
outFormat <- knitr::opts_knit$get("rmarkdown.pandoc.to")
## "latex" or "html"
## for latex and html output
isHtml <- identical(outFormat, "html")
isLatex <- identical(outFormat, "latex")
latex <- ifelse(isLatex, '\\LaTeX\\', 'LaTeX')
## specify global chunk options
knitr::opts_chunk$set(fig.width = 5, fig.height = 4, dpi = 300,
out.width = "90%", fig.align = "center")
knitr::kable(head(iris), booktabs = TRUE,
caption = '(ref:iris)')
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
View(final_data_1)
View(final_data_1)
View(final_data_1)
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
View(final_data_1)
View(final_data_1)
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
View(final_data_1)
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
?matplot
boxplot(Pred_100 ~ t, data = final_data_100, xlab = "t",ylab = "Predictions", main = "100-run Predictions with 100 samples")
boxplot(Pred_100 ~ t, data = final_data_100, xlab = "t",ylab = "Predictions")
## we generate the figure as below but not plot it out
if (! dir.exists("figs")) dir.create("figs")
png("figs/mSpline.png", width = 4, height = 3.5, units = "in", res = 300)
msMat <- mSpline(x, knots = knots, degree = 2, intercept = TRUE)
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
View(Pred100_10000)
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
View(Pred100_10000)
View(Pred100_1000)
View(Pred100_100)
mean100 <- apply(Pred100_100,2,mean)
mean100
View(Pred_Phi_100)
View(T)
source('~/GitHub/jump-start-with-rmarkdown-yuqian/main_yuqian.R')
png(file = "boxplot.png")
boxplot(Pred_100 ~ t, data = final_data_100, xlab = "t",ylab = "Predictions", main = "100-run Predictions with 100 samples")
dev.off()
source('~/GitHub/jump-start-with-rmarkdown-yuqian/getHW1_yuqian.R')
install.packages("knitr")
source('~/GitHub/jump-start-with-rmarkdown-yuqian/getHW1_yuqian.R')
source('~/GitHub/jump-start-with-rmarkdown-yuqian/getHW1_yuqian.R')
source('~/GitHub/jump-start-with-rmarkdown-yuqian/getHW1_yuqian.R')
source('~/GitHub/jump-start-with-rmarkdown-yuqian/getHW1_yuqian.R')
devtools::install_github("rstudio/rticles")
source('~/GitHub/jump-start-with-rmarkdown-yuqian/getHW1_yuqian.R')
pandoc('hw1_Yuqian.md', format='latex')
install.packages("markdown")
